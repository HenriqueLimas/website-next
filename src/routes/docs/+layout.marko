export interface Input {
  content: Marko.Body;
}

define/Outline|input: { page: string; content: Marko.Renderable }|
  if=$global.url.href.endsWith(input.page + "/")
    strong
      ${input.content}
    toc
  else
    a href=`/docs/${input.page}/`
      ${input.content}

local-let/mode="html" key="syntax-mode"
nav.pages
  button onClick() {
    mode = mode === "html" ? "concise" : "html";
  }
    -- ${mode} mode
  ul
    li
      local-let/open=true key="nav-reference-open"
      details [
        open=open
        onToggle(e) {
          open = (e.target as HTMLDetailsElement).open;
        }
      ]
        summary -- Reference
        ul
          li
            Outline page="language" -- Language
          li
            Outline page="custom-tag" -- Custom Tags
          li
            Outline page="reactivity" -- Reactivity
          li
            Outline page="core-tag" -- Core Tags
          li
            Outline page="native-tag" -- Native Tags
          li
            Outline page="concise-syntax" -- Concise Syntax
          li
            Outline page="template" -- Template API
          li
            Outline page="typescript" -- TypeScript
    li
      local-let/open=true key="nav-guides-open"
      details [
        open=open
        onToggle(e) {
          open = (e.target as HTMLDetailsElement).open;
        }
      ]
        summary -- Guides
        ul
          li
            Outline page="styling" -- Styling
          li
            Outline page="getting-started" -- Getting Started
    li
      local-let/open=true key="nav-run-open"
      details [
        open=open
        onToggle(e) {
          open = (e.target as HTMLDetailsElement).open;
        }
      ]
        summary -- Marko Run
        ul
          li
            Outline page="run/getting-started" -- Getting Started
          li
            Outline page="run/file-based-routing" -- File-based Routing
          li
            Outline page="run/typescript" -- TypeScript

main class=mode === "concise" && "concise-mode"
  ${input.content}
