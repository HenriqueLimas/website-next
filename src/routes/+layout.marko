<!DOCTYPE html>
html lang="en"
  head
    meta charset="UTF-8"
    meta name="viewport" content="width=device-width, initial-scale=1.0"
    meta name="description" content="The Marko programming language"
    title
      if=hasPageTitle($global.meta) -- ${$global.meta.pageTitle} | 
      -- Marko

    link rel="icon" sizes="32x32" href="/fav.png"
    link rel="icon" type="image/svg+xml" href="/fav.svg"
    link rel="preconnect" href="https://GB0QQV5RQM-dsn.algolia.net" crossorigin
    link rel="preconnect" href="https://fonts.googleapis.com"
    link rel="preconnect" href="https://fonts.gstatic.com" crossorigin
    link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Ubuntu:ital,wght@0,300;0,400;0,500;1,300;1,400;1,500&display=swap"
    link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Ubuntu+Mono&display=swap"

  body
    #root
      app-header
      main
        app-menu
        ${input.content}

    if=showFooter($global.meta)
      app-footer

    script --
      const selectionColors = ["red", "yellow", "green", "blue"];
      let highlightColorIndex = 0;
      window.addEventListener(
        "selectstart",
        () => {
          const color = selectionColors[highlightColorIndex];
          document.body.style.setProperty(
            "--color-selection-background",
            `var(--color-${color}-alt)`
          );
          document.body.style.setProperty(
            "--color-selection-foreground",
            `var(--color-${color}-dim-alt)`
          );
          highlightColorIndex = (highlightColorIndex + 1) % selectionColors.length;
        },
        { signal: $signal },
      );

static function hasPageTitle(
  meta: unknown,
): meta is { pageTitle: string } {
  return typeof (meta as any).pageTitle === "string";
}

static function showFooter(
  meta: unknown,
): meta is { hideFooter: boolean } {
  return !(meta as any).hideFooter;
}
